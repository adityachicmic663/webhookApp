@page "/webhook/details/{id:int}"
@inject HttpClient Http
@rendermode InteractiveWebAssembly
@using System.Text.Json
@using WebHookApp.Client.Models

<h3 class ="webhook-details-title">Webhook Request Details</h3>

@if (request != null)
{
    <div class="webhook-details-container">
        
        <div class="detail-box">
            <p><strong>IP Address:</strong>
               <pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@request.ipAddress</pre>
            </p>
        </div>
        <div class="detail-box">
            <p><strong>User-Agent:</strong>
            <pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@request.userAgent</pre>
            </p>
        </div>
        
        <div class="detail-box">
            <p>
                <strong>Headers:</strong> <pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@request.headers</pre>
            </p>
            </div>
        <div class="detail-box"> <p><strong>Body:</strong><pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@(string.IsNullOrEmpty(request.body)?"{}": request.body)</pre> </p></div>
        <div class="detail-box">
            <p><strong>Query Parameters:</strong><pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@request.queryParams</pre> </p>
        </div>
        <div class="detail-box">
            <p><strong>Files:</strong> <pre style="color: #E1E1E2; padding: 6px; background-color: #404141; border-radius: 5px;align-items:center; display: flex; justify-content: space-between;">@(string.IsNullOrEmpty(request.filePath) ? "{}" : request.filePath)</pre></p>
        </div>
      
    </div>
   
}
else
{
    <p class="loading">Loading request details...</p>
}

@code {
    [Parameter]
    public int id { get; set; }

    private webHookRequest request;

    protected override async Task OnInitializedAsync()
    {
        await LoadRequestDetails();
    }

    private async Task LoadRequestDetails()
    {
        var response = await Http.GetAsync($"api/WebHook/request/{id}");
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<ResponseModel>(); 
            if (result != null)
            {
                var data = JsonSerializer.Deserialize<webHookRequest>(JsonSerializer.Serialize(result.data));
                request = data;
            }
        }
    }
}
